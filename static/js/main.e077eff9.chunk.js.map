{"version":3,"sources":["Feedback/FeedbackOptions.js","Feedback/Statistic/Statistic.js","Feedback/Section/Section.js","Feedback/Feedback.js","App.js","reportWebVitals.js","index.js"],"names":["FeedbackOptions","handleInc","name","onClick","Statistic","good","neutral","bad","total","positiveFeedback","Section","title","children","Feedback","state","handleGoodClick","setState","handleNeutralClick","handleBadClick","this","countTotalFeedback","countPositiveFeedbackPercentage","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAuBeA,EApBS,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACzB,OACE,qCACE,wBAAQC,KAAK,OAAOC,QAASF,EAA7B,kBAGA,wBAAQC,KAAK,UAAUC,QAASF,EAAhC,qBAGA,wBAAQC,KAAK,MAAMC,QAASF,EAA5B,qBCESG,MAZf,YAAqE,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,iBAC9C,OACE,gCACE,+CAAkBJ,KAClB,kDAAqBC,KACrB,8CAAiBC,KACjB,yCAAYC,KACZ,qDAAwBC,EAAxB,YCESC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACE,6BAAKD,IACJC,MC2DQC,E,4MA3DbC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,gBAAkB,WAChB,EAAKC,SAAS,CACZX,KAAM,EAAKS,MAAMT,KAAO,K,EAI5BY,mBAAqB,WACnB,EAAKD,SAAS,CACZV,QAAS,EAAKQ,MAAMR,QAAU,K,EAIlCY,eAAiB,WACf,EAAKF,SAAS,CACZT,IAAK,EAAKO,MAAMP,IAAM,K,wDAI1B,WACE,OAAOY,KAAKL,MAAMT,KAAOc,KAAKL,MAAMR,QAAUa,KAAKL,MAAMP,M,6CAG3D,WACE,OACqB,IAAlBY,KAAKL,MAAMT,MACXc,KAAKL,MAAMT,KAAOc,KAAKL,MAAMR,QAAUa,KAAKL,MAAMP,O,oBAIvD,WACE,OACE,gCACE,eAAC,EAAD,CAASI,MAAM,wBAAf,UACE,cAAC,EAAD,CAAiBV,UAAWkB,KAAKlB,YADnC,OAIA,cAAC,EAAD,CAASU,MAAM,aAAf,SACGQ,KAAKC,qBACJ,cAAC,EAAD,CACEf,KAAMc,KAAKL,MAAMT,KACjBC,QAASa,KAAKL,MAAMR,QACpBC,IAAKY,KAAKL,MAAMP,IAChBC,MAAOW,KAAKC,qBACZX,iBAAkBU,KAAKE,oCAGzB,8D,GArDWC,aCERC,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e077eff9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ handleInc }) => {\r\n  return (\r\n    <>\r\n      <button name=\"good\" onClick={handleInc}>\r\n        Good\r\n      </button>\r\n      <button name=\"neutral\" onClick={handleInc}>\r\n        Neutral\r\n      </button>\r\n      <button name=\"bad\" onClick={handleInc}>\r\n        Bad\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  handleInc: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\n\r\nfunction Statistic({ good, neutral, bad, total, positiveFeedback }) {\r\n  return (\r\n    <div>\r\n      <div>Good coment {good}</div>\r\n      <div>Neutral coment {neutral}</div>\r\n      <div>Bad coment {bad}</div>\r\n      <div>Total {total}</div>\r\n      <div>Positive feedback {positiveFeedback} %</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Statistic;\r\n","import React from \"react\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import { Component } from \"react\";\r\nimport FeedbackOptions from \"./FeedbackOptions\";\r\nimport Statistic from \"./Statistic/Statistic\";\r\nimport Section from \"./Section/Section\";\r\n\r\nclass Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleGoodClick = () => {\r\n    this.setState({\r\n      good: this.state.good + 1,\r\n    });\r\n  };\r\n\r\n  handleNeutralClick = () => {\r\n    this.setState({\r\n      neutral: this.state.neutral + 1,\r\n    });\r\n  };\r\n\r\n  handleBadClick = () => {\r\n    this.setState({\r\n      bad: this.state.bad + 1,\r\n    });\r\n  };\r\n\r\n  countTotalFeedback() {\r\n    return this.state.good + this.state.neutral + this.state.bad;\r\n  }\r\n\r\n  countPositiveFeedbackPercentage() {\r\n    return (\r\n      (this.state.good * 100) /\r\n      (this.state.good + this.state.neutral + this.state.bad)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions handleInc={this.handleInc} />,\r\n        </Section>\r\n\r\n        <Section title=\"Statictics\">\r\n          {this.countTotalFeedback() ? (\r\n            <Statistic\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              total={this.countTotalFeedback()}\r\n              positiveFeedback={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          ) : (\r\n            <span>No feedback given</span>\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Feedback;\r\n","import React from \"react\";\nimport Feedback from \"./Feedback/Feedback\";\n\nfunction App() {\n  return <Feedback />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}